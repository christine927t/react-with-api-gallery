{"ast":null,"code":"var _jsxFileName = \"/Users/christinetreacy/Documents/GitHub/react-gallery-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport apiKey from './config.js'; //import components\n\nimport Nav from './Components/Nav';\nimport Search from './Components/Search';\nimport Gallery from './Components/Gallery';\nimport NotFound from './Components/NotFound';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pictures: [],\n      mountain: [],\n      forest: [],\n      beach: [],\n      query: '',\n      loading: true\n    };\n\n    this.performSearch = query => {\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`).then(response => {\n        console.log(query);\n        this.setState({\n          pictures: response.data.photos.photo,\n          loading: false,\n          query: query\n        });\n      }).catch(error => {\n        console.log(\"Error fetching data\", error);\n      }); // axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=mountain&per_page=24&format=json&nojsoncallback=1`)\n      //   .then(response => {\n      //     this.setState({\n      //       mountain: response.data.photos.photo,\n      //       loading: false\n      //     })\n      //   })\n      //   .catch(error => {\n      //     console.log(\"Error fetching data\", error);\n      //   })\n      // axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=forest&per_page=24&format=json&nojsoncallback=1`)\n      //   .then(response => {\n      //     this.setState({\n      //       forest: response.data.photos.photo,\n      //       loading: false\n      //     })\n      //   })\n      //   .catch(error => {\n      //     console.log(\"Error fetching data\", error);\n      //   })\n      // axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=beach&per_page=24&format=json&nojsoncallback=1`)\n      //   .then(response => {\n      //     this.setState({\n      //       beach: response.data.photos.photo,\n      //       loading: false\n      //     })\n      //   })\n      //   .catch(error => {\n      //     console.log(\"Error fetching data\", error);\n      //   })\n    };\n  }\n\n  componentDidMount(props) {\n    this.performSearch(\"mountain\");\n    this.performSearch(\"forest\");\n    this.performSearch(\"beach\");\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Search, {\n      onSearch: this.performSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Redirect, {\n        to: \"/mountain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/mountain\",\n      render: () => React.createElement(Gallery, {\n        data: this.state.mountain,\n        onSearch: this.performSearch,\n        loading: this.state.loading,\n        query: \"mountain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/forest\",\n      render: () => React.createElement(Gallery, {\n        data: this.state.forest,\n        onSearch: this.performSearch,\n        loading: this.state.loading,\n        query: \"forest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/beach\",\n      render: () => React.createElement(Gallery, {\n        data: this.state.beach,\n        onSearch: this.performSearch,\n        loading: this.state.loading,\n        query: \"beach\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/search/:query\",\n      render: () => React.createElement(Gallery, {\n        data: this.state.pictures,\n        onSearch: this.performSearch,\n        loading: this.state.loading,\n        query: this.state.query,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/christinetreacy/Documents/GitHub/react-gallery-app/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Redirect","axios","apiKey","Nav","Search","Gallery","NotFound","App","state","pictures","mountain","forest","beach","query","loading","performSearch","get","then","response","console","log","setState","data","photos","photo","catch","error","componentDidMount","props","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport apiKey from './config.js';\n\n//import components\nimport Nav from './Components/Nav';\nimport Search from './Components/Search';\nimport Gallery from './Components/Gallery';\nimport NotFound from './Components/NotFound';\n\nexport default class App extends Component {\n  state = {\n    pictures: [],\n    mountain: [],\n    forest: [],\n    beach: [],\n    query: '',\n    loading: true\n  };\n\n  componentDidMount(props) {\n    this.performSearch(\"mountain\");\n    this.performSearch(\"forest\");\n    this.performSearch(\"beach\");\n  }\n\n  performSearch = (query) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => {\n        console.log(query)\n        this.setState({\n          pictures: response.data.photos.photo,\n          loading: false,\n          query: query\n        })\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n\n    // axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=mountain&per_page=24&format=json&nojsoncallback=1`)\n    //   .then(response => {\n    //     this.setState({\n    //       mountain: response.data.photos.photo,\n    //       loading: false\n    //     })\n    //   })\n    //   .catch(error => {\n    //     console.log(\"Error fetching data\", error);\n    //   })\n\n    // axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=forest&per_page=24&format=json&nojsoncallback=1`)\n    //   .then(response => {\n    //     this.setState({\n    //       forest: response.data.photos.photo,\n    //       loading: false\n    //     })\n    //   })\n    //   .catch(error => {\n    //     console.log(\"Error fetching data\", error);\n    //   })\n\n    // axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=beach&per_page=24&format=json&nojsoncallback=1`)\n    //   .then(response => {\n    //     this.setState({\n    //       beach: response.data.photos.photo,\n    //       loading: false\n    //     })\n    //   })\n    //   .catch(error => {\n    //     console.log(\"Error fetching data\", error);\n    //   })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Search onSearch={this.performSearch} />\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/mountain\" />} />\n            <Route path=\"/mountain\" render={() => <Gallery data={this.state.mountain} onSearch={this.performSearch} loading={this.state.loading} query=\"mountain\" />} />\n            <Route path=\"/forest\" render={() => <Gallery data={this.state.forest} onSearch={this.performSearch} loading={this.state.loading} query=\"forest\" />} />\n            <Route path=\"/beach\" render={() => <Gallery data={this.state.beach} onSearch={this.performSearch} loading={this.state.loading} query=\"beach\" />} />\n            <Route path=\"/search/:query\" render={() => <Gallery data={this.state.pictures} onSearch={this.performSearch} loading={this.state.loading} query={this.state.query} />} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n};\n"]},"metadata":{},"sourceType":"module"}