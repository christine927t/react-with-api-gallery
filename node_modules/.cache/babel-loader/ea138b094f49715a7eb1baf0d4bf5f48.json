{"ast":null,"code":"import _classCallCheck from\"/Users/christinetreacy/Documents/GitHub/react-gallery-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/christinetreacy/Documents/GitHub/react-gallery-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/christinetreacy/Documents/GitHub/react-gallery-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/christinetreacy/Documents/GitHub/react-gallery-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/christinetreacy/Documents/GitHub/react-gallery-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{BrowserRouter,Route,Switch,Redirect}from'react-router-dom';import axios from'axios';import'./App.css';import apiKey from'./config.js';//import components\nimport Nav from'./Components/Nav';import Search from'./Components/Search';import Gallery from'./Components/Gallery';import NotFound from'./Components/NotFound';var randomWords=require('random-words');console.log(randomWords());//get URL for search query word\nvar url=window.location;console.log(url);var urlObject=new URL(url);var search=urlObject.searchParams.get('search');console.log(search);var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.performSearch=function(query){axios.get(\"https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=\".concat(apiKey,\"&tags=\").concat(query,\"&per_page=24&format=json&nojsoncallback=1\")).then(function(response){// console.log(query)\n_this.setState({query:query,loading:false});if(query==='mountain'){_this.setState({mountain:response.data.photos.photo});}else if(query==='forest'){_this.setState({forest:response.data.photos.photo});}else if(query==='beach'){_this.setState({beach:response.data.photos.photo});}else if(query===randomWords()){_this.setState({random:response.data.photos.photo});}else{_this.setState({pictures:response.data.photos.photo});}}).catch(function(error){console.log(\"Error fetching data\",error);});};_this.state={pictures:[],mountain:[],forest:[],beach:[],random:[],query:'',search:search,loading:true};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(props){this.performSearch(\"mountain\");this.performSearch(\"forest\");this.performSearch(\"beach\");this.performSearch(randomWords());if(search!=null){this.performSearch(search);}}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(BrowserRouter,null,React.createElement(\"div\",{className:\"container\"},React.createElement(Search,{onSearch:this.performSearch}),React.createElement(Nav,null),React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/\",render:function render(){return React.createElement(Redirect,{to:\"/mountain\"});}}),React.createElement(Route,{path:\"/mountain\",render:function render(){return React.createElement(Gallery,{data:_this2.state.mountain,onSearch:_this2.performSearch,loading:_this2.state.loading,query:\"mountain\"});}}),React.createElement(Route,{path:\"/forest\",render:function render(){return React.createElement(Gallery,{data:_this2.state.forest,onSearch:_this2.performSearch,loading:_this2.state.loading,query:\"forest\"});}}),React.createElement(Route,{path:\"/beach\",render:function render(){return React.createElement(Gallery,{data:_this2.state.beach,onSearch:_this2.performSearch,loading:_this2.state.loading,query:\"beach\"});}}),React.createElement(Route,{path:\"/search/:random\",render:function render(){return React.createElement(Gallery,{data:_this2.state.random,onSearch:_this2.performSearch,loading:_this2.state.loading,query:_this2.state.random});}}),React.createElement(Route,{path:\"/?search=:query\",render:function render(){return React.createElement(Gallery,{data:_this2.state.pictures,onSearch:_this2.performSearch,loading:_this2.state.loading,query:_this2.state.query});}}),React.createElement(Route,{component:NotFound}))));}}]);return App;}(Component);export{App as default};;","map":{"version":3,"sources":["/Users/christinetreacy/Documents/GitHub/react-gallery-app/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Redirect","axios","apiKey","Nav","Search","Gallery","NotFound","randomWords","require","console","log","url","window","location","urlObject","URL","search","searchParams","get","App","props","performSearch","query","then","response","setState","loading","mountain","data","photos","photo","forest","beach","random","pictures","catch","error","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport apiKey from './config.js';\n\n//import components\nimport Nav from './Components/Nav';\nimport Search from './Components/Search';\nimport Gallery from './Components/Gallery';\nimport NotFound from './Components/NotFound';\nconst randomWords = require('random-words');\nconsole.log(randomWords());\n\n//get URL for search query word\nconst url = window.location\nconsole.log(url)\nconst urlObject = new URL(url);\nconst search = urlObject.searchParams.get('search')\nconsole.log(search)\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      pictures: [],\n      mountain: [],\n      forest: [],\n      beach: [],\n      random: [],\n      query: '',\n      search: search,\n      loading: true\n    }\n  }\n\n  componentDidMount(props) {\n    this.performSearch(\"mountain\");\n    this.performSearch(\"forest\");\n    this.performSearch(\"beach\");\n    this.performSearch(randomWords());\n    if (search != null) {\n      this.performSearch(search);\n    }\n  }\n\n  performSearch = (query) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n      .then(response => {\n        // console.log(query)\n        this.setState({ query: query, loading: false });\n        if (query === 'mountain') {\n          this.setState({ mountain: response.data.photos.photo });\n        } else if (query === 'forest') {\n          this.setState({ forest: response.data.photos.photo });\n        } else if (query === 'beach') {\n          this.setState({ beach: response.data.photos.photo });\n        } else if (query === randomWords()) {\n          this.setState({ random: response.data.photos.photo });\n        } else {\n          this.setState({ pictures: response.data.photos.photo });\n        }\n      })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Search onSearch={this.performSearch} />\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/mountain\" />} />\n            <Route path=\"/mountain\" render={() => <Gallery data={this.state.mountain} onSearch={this.performSearch} loading={this.state.loading} query=\"mountain\" />} />\n            <Route path=\"/forest\" render={() => <Gallery data={this.state.forest} onSearch={this.performSearch} loading={this.state.loading} query=\"forest\" />} />\n            <Route path=\"/beach\" render={() => <Gallery data={this.state.beach} onSearch={this.performSearch} loading={this.state.loading} query=\"beach\" />} />\n            <Route path=\"/search/:random\" render={() => <Gallery data={this.state.random} onSearch={this.performSearch} loading={this.state.loading} query={this.state.random} />} />\n            <Route path=\"/?search=:query\" render={() => <Gallery data={this.state.pictures} onSearch={this.performSearch} loading={this.state.loading} query={this.state.query} />} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n};\n"]},"metadata":{},"sourceType":"module"}